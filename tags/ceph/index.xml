<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ceph on Ops Uncharted</title><link>https://blog.pospiech.dev/tags/ceph/</link><description>Recent content in Ceph on Ops Uncharted</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pospiech.dev/tags/ceph/index.xml" rel="self" type="application/rss+xml"/><item><title>Recovering S3 Data from a Ceph RGW Pool after Placementâ€‘Group Loss: A Case Study</title><link>https://blog.pospiech.dev/posts/how-to-recover-files-from-broken-s3-bucket-on-ceph-rgw/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://blog.pospiech.dev/posts/how-to-recover-files-from-broken-s3-bucket-on-ceph-rgw/</guid><description>&lt;p>&lt;img src="attachments/attachments/poster.png" alt="">&lt;/p>
&lt;h1 id="introduction">Introduction!&lt;/h1>
&lt;p>In this case study I want to describe how I was able to recover objects from a Ceph RADOS Gateway (RGW) pool after several placement groups (PGs) became irrecoverably corrupted. Unable to use the standard S3 API, I demonstrate how to leverage the &lt;code>rados&lt;/code> CLI, craft custom scripts to list and download objects directly from the underlying RADOS pool, and reconcile partial data loss while restoring service availability.&lt;/p></description></item></channel></rss>